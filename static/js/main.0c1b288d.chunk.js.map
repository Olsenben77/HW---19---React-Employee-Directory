{"version":3,"sources":["Nav.js","Input.js","Randomuser.js","table.js","App.js","serviceWorker.js","index.js"],"names":["Nav","className","Input","setInput","setDate","date","type","name","required","pattern","placeholder","aria-label","onChange","e","target","value","toLowerCase","Randomuser","axios","get","users","requestSort","console","log","scope","onClick","map","user","key","id","src","picture","alt","first","last","phone","email","dob","App","useState","setUsers","filteredUsers","setFilteredUsers","sortedUsers","setSortedUsers","input","date1","date2","order","setOrder","useEffect","randomuser","then","modified","data","results","a","thumbnail","split","filtered","filter","includes","param","sorted","sort","b","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0c1b288d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./App.css\";\r\n\r\nfunction Nav() {\r\n  return (\r\n    <nav>\r\n      <div className=\"top-line\">\r\n        <h1>\r\n          <u>Employee Directory</u>\r\n        </h1>\r\n      </div>\r\n      <div className=\"bottom-line\">\r\n        <p>\r\n          Click on carrots to filter by heading or use the search bar to narrow\r\n          your results.\r\n        </p>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\n\r\nfunction Input({ setInput, setDate, date }) {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-4 col-md-4 col-lg-4\">\r\n          <div className=\"input-field\">\r\n            <input\r\n              className=\"form-control mr-sm-2\"\r\n              type=\"date\"\r\n              name=\"date1\"\r\n              required\r\n              pattern=\"(0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])[- /.](19|20)\\d\\d\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n              onChange={(e) => {\r\n                const { name, value } = e.target;\r\n                setDate({ ...date, [name]: value });\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-sm-4 col-md-4 col-lg-4\">\r\n          <div className=\"input-field\">\r\n            <input\r\n              className=\"form-control mr-sm-2\"\r\n              type=\"date\"\r\n              name=\"date2\"\r\n              required\r\n              pattern=\"(0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])[- /.](19|20)\\d\\d\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n              onChange={(e) => {\r\n                const { name, value } = e.target;\r\n                setDate({ ...date, [name]: value });\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-sm-4 col-md-4 col-lg-4\">\r\n          <div className=\"input-field\">\r\n            <input\r\n              className=\"form-control mr-sm-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n              onChange={(e) => {\r\n                setInput(e.target.value.toLowerCase());\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","import axios from \"axios\";\r\n\r\nfunction Randomuser() {\r\n  return axios.get(\"https://randomuser.me/api/?results=100&nat=us\");\r\n}\r\n\r\nexport default Randomuser;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\n\r\nexport default ({ users, requestSort }) => {\r\n  console.log(users);\r\n  return (\r\n    <table className=\"table table-striped table-dark\">\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">\r\n            {\" \"}\r\n            <button type=\"button\">Picture</button>\r\n          </th>\r\n          <th scope=\"col\">\r\n            <button type=\"button\" onClick={() => requestSort(\"first\")}>\r\n              First\r\n            </button>\r\n          </th>\r\n          <th scope=\"col\">\r\n            {\" \"}\r\n            <button type=\"button\" onClick={() => requestSort(\"last\")}>\r\n              Last\r\n            </button>\r\n          </th>\r\n          <th scope=\"col\">\r\n            {\" \"}\r\n            <button type=\"button\" onClick={() => requestSort(\"phone\")}>\r\n              Phone\r\n            </button>\r\n          </th>\r\n          <th scope=\"col\">\r\n            {\" \"}\r\n            <button type=\"button\" onClick={() => requestSort(\"email\")}>\r\n              Email\r\n            </button>\r\n          </th>\r\n          <th scope=\"col\">\r\n            {\" \"}\r\n            <button type=\"button\" onClick={() => requestSort(\"dob\")}>\r\n              DOB\r\n            </button>\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {users.map((user) => (\r\n          <tr key={user.id.value}>\r\n            <td>\r\n              <img src={user.picture} alt=\"user portrait thumbnail\" />\r\n            </td>\r\n            <td>{user.first}</td>\r\n            <td>{user.last}</td>\r\n            <td>{user.phone}</td>\r\n            <td>{user.email}</td>\r\n            <td>{user.dob}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Nav from \"./Nav\";\nimport \"./Nav.css\";\nimport Input from \"./Input\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport randomuser from \"./Randomuser\";\nimport Table from \"./table\";\nimport \"./table.css\";\n\nfunction App() {\n  const [users, setUsers] = useState([]);\n  const [filteredUsers, setFilteredUsers] = useState([]);\n  const [sortedUsers, setSortedUsers] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [date, setDate] = useState({ date1: null, date2: null });\n  const [order, setOrder] = useState(0);\n  useEffect(\n    //param1 function that gets called whenever useEffect Hook is triggered\n    () => {\n      randomuser().then(({ data }) => {\n        const modified = data.results.map((a) => {\n          return {\n            ...a,\n            first: a.name.first,\n            last: a.name.last,\n            picture: a.picture.thumbnail,\n            dob: a.dob.date.split(\"T\")[0],\n          };\n        });\n        setUsers(modified);\n        setFilteredUsers(modified);\n        setSortedUsers(modified);\n      });\n    }, //param2 array of things that trigger the useEffect function when changed\n    []\n  );\n  useEffect(() => {\n    console.log(date);\n  }, [date]);\n  useEffect(() => {\n    const filtered = users.filter(\n      (user) =>\n        (user.first.toLowerCase().includes(input) ||\n          user.last.toLowerCase().includes(input)) &&\n        (date.date1 && date.date2\n          ? user.dob > date.date1 && user.dob < date.date2\n          : 1)\n    );\n    setFilteredUsers(filtered);\n    setSortedUsers(filtered);\n  }, [input, users, date]);\n  console.log(date);\n\n  const handleSort = (param) => {\n    const sorted = order\n      ? filteredUsers.sort((a, b) =>\n          a[param] < b[param] ? -1 : a[param] > b[param] ? 1 : 0\n        )\n      : filteredUsers.sort((a, b) =>\n          a[param] > b[param] ? -1 : a[param] < b[param] ? 1 : 0\n        );\n    setOrder(!order);\n    setSortedUsers(sorted);\n  };\n\n  return (\n    <div className=\"App\">\n      <Nav />\n      <br></br>\n      <Input setInput={setInput} setDate={setDate} date={date} />\n      <br></br>\n      <Table users={sortedUsers} requestSort={handleSort} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}